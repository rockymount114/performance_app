

/*
Original code 
*/
.form-layout{

    border-radius: 15px;
    width: 1200px;

}

.message-text{

    color: rgb(255, 253, 253);

}

.page-item{
    color: red;
    background-color: rgb(93, 94, 93);
    
}


.content{
    width: 1920px;
    padding: 3px;
    /* background-color: rgb(240, 9, 21); */
}


body{
	background-color: hsl(0, 5%, 98%);
  font-family: lato;
    /*Inter var,-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica Neue,Helvetica,Ubuntu,Roboto,Noto,Arial,sans-serif*/
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.container-fluid {
  flex: 1;
}

.footer {
  margin-top: auto;
}

.container-fluid {
  min-height: calc(100vh - (header_height + footer_height));
}


/* for measure actual and target col*/
#centered-header {
    text-align: center;
}

.title-column {
    max-width: 150px; /* Adjust the width as needed */
    word-wrap: break-word;
}



/*for card*/
.card {
    margin: 3px;
    background-color: hsl(0, 5%, 98%);
    padding: 10px 10px;
}

.card .card-header{
    font-size: 16px;
    color:#ffffff;
    text-transform: uppercase;
    background-color: #2c3e50;
}

.card .card-header i {
  color: #ffffff; /* Change the color of the <i> tag to white */
}

/* table {
  width: 100%;}

th{
  vertical-align: middle;
}


td
{
  max-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
} */
table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 10px;
  overflow: hidden;

}

th {
  vertical-align: middle;
}

td {
  max-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  border: 1px solid #dee2e6;
}

table thead th {
  border-top: 1px solid #dee2e6;
  border-left: 1px solid #dee2e6;
  border-right: 1px solid #dee2e6;
}

table thead th:first-child {
  border-top-left-radius: 10px;
}

table thead th:last-child {
  border-top-right-radius: 10px;
}

table tbody tr:last-child td {
  border-bottom: 1px solid #dee2e6;
}

table tbody tr:last-child td:first-child {
  border-bottom-left-radius: 10px;
}

table tbody tr:last-child td:last-child {
  border-bottom-right-radius: 10px;
}

table tbody tr td:first-child {
  border-left: 1px solid #dee2e6;
}

table tbody tr td:last-child {
  border-right: 1px solid #dee2e6;
}

.profile_pic{

  width: 200px;
  height: 200px;

}

/* for profile label*/
.label-width {
  width: 250px; /* Adjust this value as per your desired label width */
}


/*leaf animation*/
@keyframes falling-leaf {
    0% {
      transform: translate(0, 0) rotate(0deg);
      opacity: 1;
    }
    20% {
      transform: translate(20px, 20px) rotate(18deg);
    }
    40% {
      transform: translate(-15px, 40px) rotate(-12deg);
    }
    60% {
      transform: translate(10px, 60px) rotate(8deg);
    }
    80% {
      transform: translate(-5px, 80px) rotate(-4deg);
    }
    100% {
      transform: translate(0, 100vh) rotate(0deg);
      opacity: 0;
    }
  }
  
  @keyframes reset-leaf {
    0% {
      transform: translate(0, 100vh) rotate(0deg);
      opacity: 0;
    }
    100% {
      transform: translate(0, 0) rotate(0deg);
      opacity: 1;
    }
  }
  
  img[alt="Leaf Image"] {
    animation: falling-leaf 5s linear forwards, reset-leaf 0s 5s linear forwards;
    animation-play-state: paused;
  }
  
  img[alt="Leaf Image"]:hover {
    animation-play-state: running;
  }

  /* leaf animation end */
  .pending-approval-badge {
    display: inline-block;
   
     /* Ensure the span takes up only the necessary width */
  }

  .objective-text {

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .pending-approval {
    /* background-color: #fff3cd; Light yellow background */
    position: relative; /* Required for the hover message */
  }
  
  .pending-approval::before {
    content: "Pending approval";
    position: absolute;
    top: 7px;
    left: 85%;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none; /* Allows clicking through the hover message */
  }
  
  .pending-approval:hover::before {
    opacity: 1;
  }
  .objective-name {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-block;
  }

  /* for review password*/

  .password-toggle {
    position: relative;
}

.password-toggle input[type="password"] {
    padding-right: 50px; /* Adjust this value to leave enough space for the icon */
}

.password-toggle .password-toggle-icon {
    position: absolute;
    top: 50%;
    right: 10px;
    transform: translateY(-50%);
    cursor: pointer;
}


  
  /* Default max-width for larger screens */
  @media (min-width: 992px) {
    .objective-name {
      max-width: 800px; /* Adjust the value as needed */
    }
  }
  
  /* Max-width for medium screens */
  @media (max-width: 991px) {
    .objective-name {
      max-width: 8000px; /* Adjust the value as needed */
    }
  }
  
  /* Max-width for small screens */
  @media (max-width: 767px) {
    .objective-name {
      max-width: 200px; /* Adjust the value as needed */
    }
  }
  
  /* Max-width for extra-small screens */
  @media (max-width: 575px) {
    .objective-name {
      max-width: 150px; /* Adjust the value as needed */
    }
  }

  /* CSS for dynamic tags like Stack OverFlow Start */
  .focus-area-tag {
    display: inline-block;
    padding: 4px 8px;
    margin-right: 4px;
    margin-bottom: 4px;
    background-color: #E1ECF4;
    color: #39739D;
    text-decoration: none;
    border-radius: 4px;
    font-size: 12px;
    line-height: 1.4;
    cursor: pointer;
    position: relative;
  }
  
  .focus-area-tag:hover {
    background-color: #D0E3F1;
  }
  

  /* CSS for dynamic tags like Stack OverFlow End */

  .hover-link {
    text-decoration: none;
    color: inherit;
  }
  
  .hover-link:hover {
    text-decoration: underline;
    color: lightseagreen;
  }




  .tooltip-inner {
    max-width: 400px;
    width: auto;
    white-space: normal;
    word-wrap: break-word;
    text-align: left;
  }

  .expandable-text {
    max-height: 100px;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .container-fluid {
    min-height: calc(100vh - (header_height + footer_height));
  }

  body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  
  .container-fluid {
    flex: 1;
  }
  
  .footer {
    margin-top: auto;
  }


